add_library(multicut_text_parser multicut_text_parser.cpp)

add_library(parallel_gaec_eigen parallel_gaec_eigen.cpp)
target_link_libraries(parallel_gaec_eigen parallel_gaec) 

add_library(dCOO dCOO.cu)
target_link_libraries(dCOO ECL-CC_11)

add_library(multicut_message_passing multicut_message_passing.cu)

add_library(conflicted_cycles_cuda conflicted_cycles_cuda.cu)
target_link_libraries(conflicted_cycles_cuda dCOO)

add_library(dual_solver dual_solver.cu)
target_link_libraries(dual_solver dCOO conflicted_cycles_cuda multicut_message_passing)

add_library(maximum_matching_vertex_based maximum_matching_vertex_based.cu)
target_link_libraries(maximum_matching_vertex_based dCOO)

add_library(edge_contractions_woc_thrust edge_contractions_woc_thrust.cu)
target_link_libraries(edge_contractions_woc_thrust dCOO ECL-CC_11 gpuMST_boruvka)

add_library(edge_contractions_woc edge_contractions_woc.cu)
target_link_libraries(edge_contractions_woc edge_contractions_woc_thrust dCOO ECL-CC_11 gpuMST_boruvka)

add_library(parallel_gaec_cuda parallel_gaec_cuda.cu)
target_link_libraries(parallel_gaec_cuda dCOO dual_solver maximum_matching_vertex_based edge_contractions_woc)

add_executable(multicut_parallel_gaec_eigen_text_input multicut_parallel_gaec_eigen_text_input.cpp)
target_link_libraries(multicut_parallel_gaec_eigen_text_input multicut_text_parser parallel_gaec_eigen)

add_executable(multicut_parallel_solver_cuda_text_input multicut_parallel_solver_cuda_text_input.cu)
target_link_libraries(multicut_parallel_solver_cuda_text_input multicut_text_parser parallel_gaec_cuda)

pybind11_add_module(parallel_gaec_py parallel_gaec_py.cpp)
target_link_libraries(parallel_gaec_py PRIVATE parallel_gaec_eigen multicut_text_parser parallel_gaec_cuda) 
